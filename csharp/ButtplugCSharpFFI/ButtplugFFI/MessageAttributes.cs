// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ButtplugFFI
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct MessageAttributes : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static MessageAttributes GetRootAsMessageAttributes(ByteBuffer _bb) { return GetRootAsMessageAttributes(_bb, new MessageAttributes()); }
  public static MessageAttributes GetRootAsMessageAttributes(ByteBuffer _bb, MessageAttributes obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MessageAttributes __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ButtplugFFI.MessageAttributeType MessageType { get { int o = __p.__offset(4); return o != 0 ? (ButtplugFFI.MessageAttributeType)__p.bb.GetUshort(o + __p.bb_pos) : ButtplugFFI.MessageAttributeType.VibrateCmd; } }
  public uint FeatureCount { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public uint StepCount(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int StepCountLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetStepCountBytes() { return __p.__vector_as_span<uint>(8, 4); }
#else
  public ArraySegment<byte>? GetStepCountBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public uint[] GetStepCountArray() { return __p.__vector_as_array<uint>(8); }
  public Endpoint Endpoints(int j) { int o = __p.__offset(10); return o != 0 ? (Endpoint)__p.bb.GetUshort(__p.__vector(o) + j * 2) : (Endpoint)0; }
  public int EndpointsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<Endpoint> GetEndpointsBytes() { return __p.__vector_as_span<Endpoint>(10, 2); }
#else
  public ArraySegment<byte>? GetEndpointsBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public Endpoint[] GetEndpointsArray() { int o = __p.__offset(10); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); Endpoint[] a = new Endpoint[l]; for (int i = 0; i < l; i++) { a[i] = (Endpoint)__p.bb.GetUshort(p + i * 2); } return a; }
  public uint MaxDuration(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUint(__p.__vector(o) + j * 4) : (uint)0; }
  public int MaxDurationLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<uint> GetMaxDurationBytes() { return __p.__vector_as_span<uint>(12, 4); }
#else
  public ArraySegment<byte>? GetMaxDurationBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public uint[] GetMaxDurationArray() { return __p.__vector_as_array<uint>(12); }

  public static Offset<ButtplugFFI.MessageAttributes> CreateMessageAttributes(FlatBufferBuilder builder,
      ButtplugFFI.MessageAttributeType message_type = ButtplugFFI.MessageAttributeType.VibrateCmd,
      uint feature_count = 0,
      VectorOffset step_countOffset = default(VectorOffset),
      VectorOffset endpointsOffset = default(VectorOffset),
      VectorOffset max_durationOffset = default(VectorOffset)) {
    builder.StartTable(5);
    MessageAttributes.AddMaxDuration(builder, max_durationOffset);
    MessageAttributes.AddEndpoints(builder, endpointsOffset);
    MessageAttributes.AddStepCount(builder, step_countOffset);
    MessageAttributes.AddFeatureCount(builder, feature_count);
    MessageAttributes.AddMessageType(builder, message_type);
    return MessageAttributes.EndMessageAttributes(builder);
  }

  public static void StartMessageAttributes(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddMessageType(FlatBufferBuilder builder, ButtplugFFI.MessageAttributeType messageType) { builder.AddUshort(0, (ushort)messageType, 0); }
  public static void AddFeatureCount(FlatBufferBuilder builder, uint featureCount) { builder.AddUint(1, featureCount, 0); }
  public static void AddStepCount(FlatBufferBuilder builder, VectorOffset stepCountOffset) { builder.AddOffset(2, stepCountOffset.Value, 0); }
  public static VectorOffset CreateStepCountVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateStepCountVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartStepCountVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEndpoints(FlatBufferBuilder builder, VectorOffset endpointsOffset) { builder.AddOffset(3, endpointsOffset.Value, 0); }
  public static VectorOffset CreateEndpointsVector(FlatBufferBuilder builder, Endpoint[] data) { builder.StartVector(2, data.Length, 2); for (int i = data.Length - 1; i >= 0; i--) builder.AddUshort((ushort)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEndpointsVectorBlock(FlatBufferBuilder builder, Endpoint[] data) { builder.StartVector(2, data.Length, 2); builder.Add(data); return builder.EndVector(); }
  public static void StartEndpointsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(2, numElems, 2); }
  public static void AddMaxDuration(FlatBufferBuilder builder, VectorOffset maxDurationOffset) { builder.AddOffset(4, maxDurationOffset.Value, 0); }
  public static VectorOffset CreateMaxDurationVector(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddUint(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMaxDurationVectorBlock(FlatBufferBuilder builder, uint[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMaxDurationVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ButtplugFFI.MessageAttributes> EndMessageAttributes(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ButtplugFFI.MessageAttributes>(o);
  }
};


}
