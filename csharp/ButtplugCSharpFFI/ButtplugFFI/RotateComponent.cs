// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ButtplugFFI
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct RotateComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RotateComponent GetRootAsRotateComponent(ByteBuffer _bb) { return GetRootAsRotateComponent(_bb, new RotateComponent()); }
  public static RotateComponent GetRootAsRotateComponent(ByteBuffer _bb, RotateComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RotateComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Index { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public double Speed { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public bool Clockwise { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<ButtplugFFI.RotateComponent> CreateRotateComponent(FlatBufferBuilder builder,
      uint index = 0,
      double speed = 0.0,
      bool clockwise = false) {
    builder.StartTable(3);
    RotateComponent.AddSpeed(builder, speed);
    RotateComponent.AddIndex(builder, index);
    RotateComponent.AddClockwise(builder, clockwise);
    return RotateComponent.EndRotateComponent(builder);
  }

  public static void StartRotateComponent(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddIndex(FlatBufferBuilder builder, uint index) { builder.AddUint(0, index, 0); }
  public static void AddSpeed(FlatBufferBuilder builder, double speed) { builder.AddDouble(1, speed, 0.0); }
  public static void AddClockwise(FlatBufferBuilder builder, bool clockwise) { builder.AddBool(2, clockwise, false); }
  public static Offset<ButtplugFFI.RotateComponent> EndRotateComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ButtplugFFI.RotateComponent>(o);
  }
};


}
