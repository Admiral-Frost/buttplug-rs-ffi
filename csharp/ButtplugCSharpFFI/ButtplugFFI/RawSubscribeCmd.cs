// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ButtplugFFI
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct RawSubscribeCmd : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RawSubscribeCmd GetRootAsRawSubscribeCmd(ByteBuffer _bb) { return GetRootAsRawSubscribeCmd(_bb, new RawSubscribeCmd()); }
  public static RawSubscribeCmd GetRootAsRawSubscribeCmd(ByteBuffer _bb, RawSubscribeCmd obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RawSubscribeCmd __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Endpoint Endpoint { get { int o = __p.__offset(4); return o != 0 ? (Endpoint)__p.bb.GetUshort(o + __p.bb_pos) : Endpoint.Tx; } }

  public static Offset<ButtplugFFI.RawSubscribeCmd> CreateRawSubscribeCmd(FlatBufferBuilder builder,
      Endpoint endpoint = Endpoint.Tx) {
    builder.StartTable(1);
    RawSubscribeCmd.AddEndpoint(builder, endpoint);
    return RawSubscribeCmd.EndRawSubscribeCmd(builder);
  }

  public static void StartRawSubscribeCmd(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddEndpoint(FlatBufferBuilder builder, Endpoint endpoint) { builder.AddUshort(0, (ushort)endpoint, 0); }
  public static Offset<ButtplugFFI.RawSubscribeCmd> EndRawSubscribeCmd(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ButtplugFFI.RawSubscribeCmd>(o);
  }
};


}
